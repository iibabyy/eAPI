services:
  api:
    build: ./backend
    container_name: api
    depends_on:
      - db
      - redis
    env_file: .env
    networks:
      - app_network
      - db_network
    # ports:
    #   - 8080:80
    volumes:
      - api_srcs:/app
      - api_migrations:/var/lib/migrations

  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - app_network
    ports:
      - 8080:3000
    volumes:
      - frontend_srcs:/app


  redis:
    image: redis
    container_name: redis
    expose:
      - 6379
    networks:
      - db_network
    ports:
      - 6370:6379

  db:
    image: postgres:15
    container_name: db
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - db_network

##    NETWORKS    ##

networks:
  app_network:
    driver: bridge

  db_network:
    driver: bridge


##    VOLUMES    ##

volumes:
  database: {}
    # driver: local
    # driver_opts:
    #   type: 'none'
    #   o: 'bind'
    #   device: /lib/myapp/data
  frontend_srcs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./frontend/requirements

  api_srcs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./backend/requirements/srcs

  api_migrations:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./backend/requirements/migrations