name: CI
on: [push, pull_request]

permissions:
  contents: read
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and cache Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/docker/Dockerfile.tests
          tags: ghcr.io/iibabyy/eapi:test
          load: true
          push: false
          cache-from: type=registry,ref=ghcr.io/iibabyy/eapi:cache
          cache-to: type=registry,ref=ghcr.io/iibabyy/eapi:cache,mode=max

      - name: Run tests
        run: make test

  clippy:
    name: Check linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve Rust cache
        uses: Swatinem/rust-cache@v2
        with:
            workspaces: "./api"

      - name: Set up Rust
        run: |
          rustup update stable
          rustup default stable

      - name: Check linting
        working-directory: ./api
        run: cargo clippy

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve Rust cache
        uses: Swatinem/rust-cache@v2
        with:
            workspaces: "./api"

      - name: Set up Rust
        run: |
          rustup update stable
          rustup default stable

      - name: Run cargo fmt
        working-directory: ./api
        run: cargo fmt --check